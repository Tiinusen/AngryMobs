package BarrackObjects

import BarrackConstants
import ChannelAbilityPreset
import UpgradeObjEditing
import Ids

@compiletime function generate()
	// Worker Hall
	let ids = [BARRACK_ID_LEVEL_1,BARRACK_ID_LEVEL_2,BARRACK_ID_LEVEL_3,BARRACK_ID_LEVEL_4]
	for i = 0 to 3
		let b = new BuildingDefinition(ids[i], UnitIds.humanbarracks)
		..setNameEditorSuffix("(Barrack)")
		..setName(BARRACK_NAME+" - Level "+(i+1).toString())
		..setTooltipBasic(BARRACK_TOOL_TIP_BASIC)
		..setTooltipExtended(BARRACK_TOOL_TIP_EXTENDED)
		// Icon / Model
		..setIconGameInterface(BARRACK_ICON)
		..setModelFile(BARRACK_MODEL)
		// Button Placement
		..setButtonPositionX(i != 0 ? 3 : BARRACK_BUTTON_X)
		..setButtonPositionY(i != 0 ? 2 : BARRACK_BUTTON_Y)
		// Abilities / Upgrades / Building / Training / Selling
		..setNormalAbilities(BARRACK_ABILITIES)
		..setResearchesAvailable(commaList(
			BARRACK_FOOTMAN_ARMOR_ID, 
			BARRACK_FOOTMAN_DAMAGE_ID, 
			BARRACK_ARCHER_DAMAGE_ID
		))
		..setUnitsTrained(commaList(BARRACK_UNITS_TRAINED))
		..setUnitsSold(BARRACK_UNITS_SOLD)
		// Build / Cost
		..setBuildTime(1)
		..setGoldCost(BARRACK_COST_GOLD+i*BARRACK_COST_GOLD_INCREMENT)
		..setLumberCost(i==0 ? BARRACK_COST_LUMBER : 0)
		// Health
		..setHitPointsMaximumBase(1000)
		// Other
		..setIsaBuilding(true)
		..setHideMinimapDisplay(true)
		// Upgrades To
		if i < 3
			b..setUpgradesTo(commaList(ids[i+1]))
			
		if i == 0
			// Hotkey
			b..setHotkey(BARRACK_HOTKEY)
		else
			b..setHotkey("V")

	// Footman Armor
	new UpgradeDefinition(BARRACK_FOOTMAN_ARMOR_ID)
		..setLevels(2)
		..presetEditorSuffix((int lvl) -> "(Barrack)")
		..presetName((int lvl) -> "Armor (|c90ecfc0eLevel "+lvl.toString()+"|r)")
		..presetTooltip((int lvl) -> "Armor (|c90ecfc0eLevel "+lvl.toString()+"|r)")
		..presetTooltipExtended((int lvl) -> "Increases the armor of your footmen")
		// Requirements
		// ..presetRequirements((int lvl) -> commaList(""))
		// ..presetRequirementsLevels((int lvl) -> commaList(""))
		// Hotkey
		..presetHotkey(lvl -> "X")
		// Icon
		..setIcon(1, Icons.bTNHumanArmorUpOne)
		..setIcon(2, Icons.bTNHumanArmorUpTwo)
		..setIcon(3, Icons.bTNHumanArmorUpThree)
		// Button Placement
		..setButtonPositionX(1)
		..setButtonPositionY(2)
		// Cost
		..setTimeBase(1)
		..setTimeIncrement(0)
		..setGoldCostBase(200)
		..setGoldCostIncrement(400)

	// Footman Damage
	new UpgradeDefinition(BARRACK_FOOTMAN_DAMAGE_ID)
		..setLevels(3)
		..presetEditorSuffix((int lvl) -> "(Barrack)")
		..presetName((int lvl) -> "Attack Damage (|c90ecfc0eLevel "+lvl.toString()+"|r)")
		..presetTooltip((int lvl) -> "Attack Damage (|c90ecfc0eLevel "+lvl.toString()+"|r)")
		..presetTooltipExtended((int lvl) -> "Increases the attack damage of your footmen")
		// Requirements
		// ..presetRequirements((int lvl) -> commaList(""))
		// ..presetRequirementsLevels((int lvl) -> commaList(""))
		// Hotkey
		..presetHotkey(lvl -> "C")
		// Icon
		..setIcon(1, "ReplaceableTextures\\CommandButtons\\BTNSteelMelee.blp")
		..setIcon(2, "ReplaceableTextures\\CommandButtons\\BTNThoriumMelee.blp")
		..setIcon(3, "ReplaceableTextures\\CommandButtons\\BTNArcaniteMelee.blp")
		// Button Placement
		..setButtonPositionX(2)
		..setButtonPositionY(2)
		// Cost
		..setTimeBase(1)
		..setTimeIncrement(0)
		..setGoldCostBase(200)
		..setGoldCostIncrement(400)

	// Archer Damage
	new UpgradeDefinition(BARRACK_ARCHER_DAMAGE_ID)
		..setLevels(3)
		..presetEditorSuffix((int lvl) -> "(Barrack)")
		..presetName((int lvl) -> "Attack Damage (|c90ecfc0eLevel "+lvl.toString()+"|r)")
		..presetTooltip((int lvl) -> "Attack Damage (|c90ecfc0eLevel "+lvl.toString()+"|r)")
		..presetTooltipExtended((int lvl) -> "Increases the attack damage of your archers")
		// Requirements
		// ..presetRequirements((int lvl) -> commaList(""))
		// ..presetRequirementsLevels((int lvl) -> commaList(""))
		// Hotkey
		..presetHotkey(lvl -> "Z")
		// Icon
		..setIcon(1, Icons.bTNImprovedBows)
		..setIcon(2, Icons.bTNImprovedBows)
		..setIcon(3, Icons.bTNImprovedBows)
		// Button Placement
		..setButtonPositionX(0)
		..setButtonPositionY(2)
		// Cost
		..setTimeBase(1)
		..setTimeIncrement(0)
		..setGoldCostBase(200)
		..setGoldCostIncrement(400)